name: Tests

on:
  pull_request:
    types: [opened, synchronize, closed]
    branches: [main, master]
  pull_request_target:
    types: [opened, synchronize, closed]
    branches: [main, master]

jobs:
  flowzone:
    name: Flowzone
    uses: ./.github/workflows/flowzone.yml
    # prevent duplicate workflow executions for pull_request and pull_request_target
    if: |
      (
        github.event.pull_request.head.repo.full_name == github.repository &&
        github.event_name == 'pull_request'
      ) || (
        github.event.pull_request.head.repo.full_name != github.repository &&
        github.event_name == 'pull_request_target'
      )
    secrets: inherit
    with:
      working_directory: ./tests
      repo_config: true
      repo_description: "Reusable, opinionated, zero-conf workflows for GitHub actions"
      docker_images: |
        ghcr.io/product-os/flowzone
      balena_slugs: |
        product_os/flowzone
      cargo_targets: |
        x86_64-unknown-linux-gnu,
        armv7-unknown-linux-gnueabi,
        aarch64-unknown-linux-gnu
      cloudflare_website: "flowzone"
      bake_targets: default,amd64,arm64,armv7
      docker_runs_on: >
        {
          "linux/amd64": ["self-hosted","distro:jammy","platform:linux/amd64"],
          "linux/arm64": ["self-hosted","distro:jammy","platform:linux/arm64"]
        }
      custom_runs_on: >
        [
          ["ubuntu-22.04"],
          ["self-hosted"]
        ]
      jobs_timeout_minutes: 30

  draft:
    name: "Draft PRs"
    runs-on: ubuntu-22.04
    timeout-minutes: 90
    # skip e2e for forks
    if: |
        github.event.pull_request.head.repo.full_name == github.repository &&
        github.event_name == 'pull_request'
    # depend on Flowzone passing it's self-checks first before rolling out to other repos
    needs: [flowzone]
    # https://docs.github.com/en/actions/using-jobs/using-concurrency
    concurrency:
      group: flowzone-${{ matrix.repository }}-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        working-directory: .
        # shell: bash --noprofile --norc -eo pipefail -x {0}

    strategy:
      fail-fast: false
      matrix:
        # TODO: changing these currently requires an admin to manually
        # update the branch protection rules on the Flowzone repository settings
        repository:
          [
            balena-io-modules/open-balena-base,
            balena-io/balena-api,
            balena-io/docs,
            balena-io/environment-staging,
            balena-os/balena-engine,
            balena-os/fatrw,
            product-os/environment-staging,
          ]
        include:
          - token_scope: >-
              {
                "actions": "read",
                "administration": "write",
                "checks": "read",
                "contents": "write",
                "members": "read",
                "metadata": "read",
                "pull_requests": "write",
                "statuses": "read",
                "workflows": "write"
              }
          - app_id: "${{ vars.APP_ID || '291899' }}"
          - installation_id: 34046903
            repository: balena-io-modules/open-balena-base
          - installation_id: 34046749
            repository: balena-io/balena-api
          - installation_id: 34046749
            repository: balena-io/docs
          - installation_id: 34046749
            repository: balena-io/environment-staging
          - installation_id: 34046907
            repository: balena-os/balena-engine
          - installation_id: 34046907
            repository: balena-os/fatrw
          # (e.g. https://github.com/organizations/product-os/settings/installations/34040165)
          - installation_id: 34040165
            repository: product-os/environment-staging

    env:
      # environment variables used by gh CLI
      # https://cli.github.com/manual/gh_help_environment
      GH_REPO: ${{ matrix.repository }}
      GH_PROMPT_DISABLED: "true"
      GH_DEBUG: "true"
      GH_PAGER: "cat"
      pr_branch: "flowzone/${{ github.head_ref || github.ref_name }}"
      pr_title: "Test Flowzone PR ${{ github.event.pull_request.number }}"

    steps:
      - name: Check secrets
        id: check_secrets
        run: |
          if [[ -z '${{ secrets.FLOWZONE_TOKEN }}' ]] \
            && [[ -z '${{ secrets.GH_APP_PRIVATE_KEY }}' ]]; then
              echo '::error::Must specify either GH_APP_PRIVATE_KEY or FLOWZONE_TOKEN.'
              false
          fi

          if [[ -n '${{ secrets.GH_APP_PRIVATE_KEY }}' ]]; then
              echo 'private_key=true' >> $GITHUB_OUTPUT
          else
              echo 'private_key=false' >> $GITHUB_OUTPUT
          fi

      - name: Generate token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92 # v1.8.0
        if: steps.check_secrets.outputs.private_key == 'true'
        id: gh_token
        with:
          app_id: ${{ matrix.app_id }}
          installation_id: ${{ matrix.installation_id }}
          permissions: ${{ matrix.token_scope }}
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          repository: ${{ matrix.repository }}

      - name: Get repo settings
        if: github.event.action != 'closed'
        id: repo
        env:
          GH_TOKEN: ${{ steps.gh_token.outputs.token || secrets.FLOWZONE_TOKEN }}
        run: |
          echo "default_branch=$(gh api repos/{owner}/{repo} --jq '.default_branch')" >> $GITHUB_OUTPUT

      - uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f # v3
        if: github.event.action != 'closed'
        with:
          repository: ${{ matrix.repository }}
          token: ${{ steps.gh_token.outputs.token || secrets.FLOWZONE_TOKEN }}
          ref: ${{ steps.repo.outputs.default_branch }}

      # import gpg key for signed commits
      - name: Import GPG key
        if: github.event.action != 'closed'
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@111c56156bcc6918c056dbef52164cfa583dc549 # v5.2.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_config_global: true
          git_user_signingkey: true
          git_commit_gpgsign: true

      # set flowzone tag to the current HEAD sha
      # disable branch protection
      # commit changes
      - name: Update Flowzone workflow
        if: github.event.action != 'closed'
        env:
          GIT_AUTHOR_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_AUTHOR_EMAIL: ${{ steps.import-gpg.outputs.email }}
          GIT_COMMITTER_NAME: ${{ steps.import-gpg.outputs.name }}
          GIT_COMMITTER_EMAIL: ${{ steps.import-gpg.outputs.email }}
          GH_TOKEN: ${{ steps.gh_token.outputs.token || secrets.FLOWZONE_TOKEN }}
        run: |
          yq '(.jobs.* | select(.uses | contains("flowzone.yml"))).uses |= sub("(?P<uses>.+)@.+"; "$1@${{ github.event.pull_request.head.sha }}")' -i .github/workflows/flowzone.yml

          yq '(.jobs.* | select(.uses | contains("flowzone.yml"))).uses |= . line_comment="${{ github.run_id }}-${{ github.run_attempt }}"' -i .github/workflows/flowzone.yml

          yq '(.jobs.* | select(.uses | contains("flowzone.yml"))).with.protect_branch |= false' -i .github/workflows/flowzone.yml

          git add .github/workflows/flowzone.yml
          git commit -m "patch: ${{ env.pr_title }}" -m "Updated: $(date -u +'%Y-%m-%dT%H:%M:%SZ')"

      # create a new pull request if it doesn't already exist
      - name: Create pull request
        if: github.event.action != 'closed'
        uses: peter-evans/create-pull-request@38e0b6e68b4c852a5500a94740f0e535e0d7ba54 # v4.2.4
        id: cpr
        with:
          token: ${{ steps.gh_token.outputs.token || secrets.FLOWZONE_TOKEN }}
          branch: ${{ env.pr_branch }}
          title: "${{ env.pr_title }}"
          body: |
            Auto-generated by https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}

            Will be closed automatically once the PR is merged.
          labels: |
            flowzone
            draft
          draft: true
          delete-branch: true

      # wait for checks register, complete and fail if any required checks failed
      - name: Wait for all checks to finish
        if: steps.cpr.outputs.pull-request-number != ''
        env:
          flowzone_re: "^Flowzone"
          filter_re: "^policy-?bot"
          GH_TOKEN: ${{ steps.gh_token.outputs.token || secrets.FLOWZONE_TOKEN }}
        run: |
          while ! gh pr checks --required \
            --repo ${{ matrix.repository }} \
            ${{ steps.cpr.outputs.pull-request-number}} | grep -qE "${flowzone_re}"; do
              echo '::info::waiting for required checks to register'
              sleep $(((RANDOM % 5) + 5))
          done

          count=1
          while [ ${count} -lt 3 ]
          do
            sleep $(((RANDOM % 15) + 15))
            while gh pr checks --required \
              --repo ${{ matrix.repository }} \
              ${{ steps.cpr.outputs.pull-request-number}} \
              | grep -vE "${filter_re}" \
              | grep -E '\s+pending\s+'; do
                echo '::info::waiting for required checks to complete'
                sleep $(((RANDOM % 15) + 15))
            done
            count=$((count+1))
          done

          ! gh pr checks --required \
            --repo ${{ matrix.repository }} \
            ${{ steps.cpr.outputs.pull-request-number}} | grep -E '\s+fail\s+'

      # on closed
      - name: Get PR number
        if: github.event.action == 'closed'
        id: pr
        env:
          GH_TOKEN: ${{ steps.gh_token.outputs.token || secrets.FLOWZONE_TOKEN }}
        run: |
          echo "number=$(gh pr list --head ${{ env.pr_branch }} --draft --json number --jq '.[0].number')" >> $GITHUB_OUTPUT

      # on closed
      - name: Close pull request
        if: github.event.action == 'closed' && steps.pr.outputs.number != ''
        uses: peter-evans/close-pull@f47e95b46e45ebf8a3a792e3a60e831ec2563f81 # v2.0.1
        with:
          token: ${{ steps.gh_token.outputs.token || secrets.FLOWZONE_TOKEN }}
          repository: ${{ matrix.repository }}
          pull-request-number: ${{ steps.pr.outputs.number }}
          comment: Auto-closing pull request
          delete-branch: true
